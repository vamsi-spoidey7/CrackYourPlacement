class Solution {
public:
    bool sameTree(TreeNode *root1,TreeNode *root2){
        if(root1==NULL || root2==NULL)
            return root1==root2;
        return root1->val==root2->val && sameTree(root1->left,root2->left) && sameTree(root1->right,root2->right);
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(subRoot==NULL) return true;
        if(root==NULL) return false;
        return sameTree(root,subRoot) || isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);
    }
};
